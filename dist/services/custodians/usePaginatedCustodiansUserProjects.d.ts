import { PaginatedQueryProps } from "../../hooks/usePaginatedQuery";
import { GetCustodiansUserProjectsResponse } from "./types";
type GetCustodiansUserProjectsQuery = Partial<PaginatedQueryProps<GetCustodiansUserProjectsResponse>>;
export default function usePaginatedCustodiansUserProjects(custodianId: number, userId: number, options?: GetCustodiansUserProjectsQuery): (import("@tanstack/query-core").QueryObserverRefetchErrorResult<import("../../types/requests").ResponseJson<import("../../types/requests").Paged<GetCustodiansUserProjectsResponse>>, Error> & import("../../types/requests").Paged<GetCustodiansUserProjectsResponse> & import("../../hooks/usePaginatedQuery").PaginatedQueryHelpers) | (import("@tanstack/query-core").QueryObserverSuccessResult<import("../../types/requests").ResponseJson<import("../../types/requests").Paged<GetCustodiansUserProjectsResponse>>, Error> & import("../../types/requests").Paged<GetCustodiansUserProjectsResponse> & import("../../hooks/usePaginatedQuery").PaginatedQueryHelpers);
export {};
